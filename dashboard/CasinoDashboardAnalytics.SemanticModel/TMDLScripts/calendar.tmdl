createOrReplace

	table dim_date
		dataCategory: Time

		column date
			dataType: dateTime
			isKey
			formatString: Short Date
			summarizeBy: none
			sourceColumn: date

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column date_index
			dataType: int64
			formatString: 0
			displayFolder: date
			summarizeBy: none
			sourceColumn: date_index

			annotation SummarizationSetBy = Automatic

		column days_to_today
			dataType: int64
			formatString: 0
			displayFolder: date
			summarizeBy: none
			sourceColumn: days_to_today

			annotation SummarizationSetBy = Automatic

		column current_date
			dataType: string
			displayFolder: date
			summarizeBy: none
			sourceColumn: current_date
			sortByColumn: date

			annotation SummarizationSetBy = Automatic

		column year
			dataType: int64
			formatString: 0
			displayFolder: year
			summarizeBy: none
			sourceColumn: year

			annotation SummarizationSetBy = Automatic

		column year_start
			dataType: dateTime
			formatString: Short Date
			displayFolder: year
			summarizeBy: none
			sourceColumn: year_start

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column year_end
			dataType: dateTime
			formatString: Short Date
			displayFolder: year
			summarizeBy: none
			sourceColumn: year_end

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column year_index
			dataType: int64
			formatString: 0
			displayFolder: year
			summarizeBy: none
			sourceColumn: year_index

			annotation SummarizationSetBy = Automatic

		column year_descending_name
			dataType: int64
			formatString: 0
			displayFolder: year
			summarizeBy: none
			sourceColumn: year_descending_name
			sortByColumn: year_descending_number

			annotation SummarizationSetBy = Automatic

		column year_descending_number
			dataType: int64
			formatString: 0
			displayFolder: year
			summarizeBy: none
			sourceColumn: year_descending_number

			annotation SummarizationSetBy = Automatic

		column years_to_today
			dataType: int64
			formatString: 0
			displayFolder: year
			summarizeBy: none
			sourceColumn: years_to_today

			annotation SummarizationSetBy = Automatic

		column current_year
			dataType: string
			displayFolder: year
			summarizeBy: none
			sourceColumn: current_year
			sortByColumn: year

			annotation SummarizationSetBy = Automatic

		column day_of_month
			dataType: int64
			formatString: 0
			displayFolder: day
			summarizeBy: none
			sourceColumn: day_of_month

			annotation SummarizationSetBy = Automatic

		column day_of_year
			dataType: int64
			formatString: 0
			displayFolder: day
			summarizeBy: none
			sourceColumn: day_of_year

			annotation SummarizationSetBy = Automatic

		column day_of_week_number
			dataType: int64
			formatString: 0
			displayFolder: day
			summarizeBy: none
			sourceColumn: day_of_week_number

			annotation SummarizationSetBy = Automatic

		column day_of_week_name
			dataType: string
			displayFolder: day
			summarizeBy: none
			sourceColumn: day_of_week_name
			sortByColumn: day_of_week_number

			annotation SummarizationSetBy = Automatic

		column day_of_week_name_short
			dataType: string
			displayFolder: day
			summarizeBy: none
			sourceColumn: day_of_week_name_short
			sortByColumn: day_of_week_number

			annotation SummarizationSetBy = Automatic

		column day_of_week_name_initials
			dataType: string
			displayFolder: day
			summarizeBy: none
			sourceColumn: day_of_week_name_initials

			annotation SummarizationSetBy = Automatic

		column month_number
			dataType: int64
			formatString: 0
			displayFolder: month
			summarizeBy: none
			sourceColumn: month_number

			annotation SummarizationSetBy = Automatic

		column month_name
			dataType: string
			displayFolder: month
			summarizeBy: none
			sourceColumn: month_name
			sortByColumn: month_number

			annotation SummarizationSetBy = Automatic

		column month_name_short
			dataType: string
			displayFolder: month
			summarizeBy: none
			sourceColumn: month_name_short
			sortByColumn: month_number

			annotation SummarizationSetBy = Automatic

		column month_name_initials
			dataType: string
			displayFolder: month
			summarizeBy: none
			sourceColumn: month_name_initials

			annotation SummarizationSetBy = Automatic

		column month_year_name
			dataType: string
			displayFolder: month
			summarizeBy: none
			sourceColumn: month_year_name
			sortByColumn: month_year_number

			annotation SummarizationSetBy = Automatic

		column month_year_number
			dataType: int64
			formatString: 0
			displayFolder: month
			summarizeBy: none
			sourceColumn: month_year_number

			annotation SummarizationSetBy = Automatic

		column month_day_number
			dataType: int64
			formatString: 0
			displayFolder: month
			summarizeBy: none
			sourceColumn: month_day_number

			annotation SummarizationSetBy = Automatic

		column month_day_name
			dataType: string
			displayFolder: month
			summarizeBy: none
			sourceColumn: month_day_name
			sortByColumn: month_day_number

			annotation SummarizationSetBy = Automatic

		column month_start
			dataType: dateTime
			formatString: Short Date
			displayFolder: month
			summarizeBy: none
			sourceColumn: month_start

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column month_end
			dataType: dateTime
			formatString: Short Date
			displayFolder: month
			summarizeBy: none
			sourceColumn: month_end

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column month_index
			dataType: int64
			formatString: 0
			displayFolder: month
			summarizeBy: none
			sourceColumn: month_index

			annotation SummarizationSetBy = Automatic

		column months_to_today
			dataType: int64
			formatString: 0
			displayFolder: month
			summarizeBy: none
			sourceColumn: months_to_today

			annotation SummarizationSetBy = Automatic

		column current_month_name
			dataType: string
			displayFolder: month
			summarizeBy: none
			sourceColumn: current_month_name
			sortByColumn: month_number

			annotation SummarizationSetBy = Automatic

		column current_month_name_short
			dataType: string
			displayFolder: month
			summarizeBy: none
			sourceColumn: current_month_name_short
			sortByColumn: month_number

			annotation SummarizationSetBy = Automatic

		column current_month_year_name
			dataType: string
			displayFolder: month
			summarizeBy: none
			sourceColumn: current_month_year_name
			sortByColumn: month_year_number

			annotation SummarizationSetBy = Automatic

		column quarter_number
			dataType: int64
			formatString: 0
			displayFolder: quarter
			summarizeBy: none
			sourceColumn: quarter_number

			annotation SummarizationSetBy = Automatic

		column quarter_name
			dataType: string
			displayFolder: quarter
			summarizeBy: none
			sourceColumn: quarter_name
			sortByColumn: quarter_number

			annotation SummarizationSetBy = Automatic

		column quarter_year_name
			dataType: string
			displayFolder: quarter
			summarizeBy: none
			sourceColumn: quarter_year_name
			sortByColumn: quarter_year_number

			annotation SummarizationSetBy = Automatic

		column quarter_year_number
			dataType: int64
			formatString: 0
			displayFolder: quarter
			summarizeBy: none
			sourceColumn: quarter_year_number

			annotation SummarizationSetBy = Automatic

		column quarter_start
			dataType: dateTime
			formatString: Short Date
			displayFolder: quarter
			summarizeBy: none
			sourceColumn: quarter_start

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column quarter_end
			dataType: dateTime
			formatString: Short Date
			displayFolder: quarter
			summarizeBy: none
			sourceColumn: quarter_end

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column quarter_index
			dataType: int64
			formatString: 0
			displayFolder: quarter
			summarizeBy: none
			sourceColumn: quarter_index

			annotation SummarizationSetBy = Automatic

		column quarters_to_today
			dataType: int64
			formatString: 0
			displayFolder: quarter
			summarizeBy: none
			sourceColumn: quarters_to_today

			annotation SummarizationSetBy = Automatic

		column current_quarter
			dataType: string
			displayFolder: quarter
			summarizeBy: none
			sourceColumn: current_quarter
			sortByColumn: quarter_number

			annotation SummarizationSetBy = Automatic

		column current_quarter_year
			dataType: string
			displayFolder: quarter
			summarizeBy: none
			sourceColumn: current_quarter_year
			sortByColumn: quarter_year_number

			annotation SummarizationSetBy = Automatic

		column month_of_quarter_number
			dataType: int64
			formatString: 0
			displayFolder: month
			summarizeBy: none
			sourceColumn: month_of_quarter_number

			annotation SummarizationSetBy = Automatic

		column week_of_year_number_iso
			dataType: int64
			formatString: 0
			displayFolder: week
			summarizeBy: none
			sourceColumn: week_of_year_number_iso

			annotation SummarizationSetBy = Automatic

		column year_iso
			dataType: int64
			formatString: 0
			displayFolder: week
			summarizeBy: none
			sourceColumn: year_iso

			annotation SummarizationSetBy = Automatic

		column week_year_number_iso
			dataType: int64
			formatString: 0
			displayFolder: week
			summarizeBy: none
			sourceColumn: week_year_number_iso

			annotation SummarizationSetBy = Automatic

		column week_year_name_iso
			dataType: string
			displayFolder: week
			summarizeBy: none
			sourceColumn: week_year_name_iso
			sortByColumn: week_year_number_iso

			annotation SummarizationSetBy = Automatic

		column week_start_iso
			dataType: dateTime
			formatString: Short Date
			displayFolder: week
			summarizeBy: none
			sourceColumn: week_start_iso

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column week_end_iso
			dataType: dateTime
			formatString: Short Date
			displayFolder: week
			summarizeBy: none
			sourceColumn: week_end_iso

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column week_index_iso
			dataType: int64
			formatString: 0
			displayFolder: week
			summarizeBy: none
			sourceColumn: week_index_iso

			annotation SummarizationSetBy = Automatic

		column weeks_to_today_iso
			dataType: int64
			formatString: 0
			displayFolder: week
			summarizeBy: none
			sourceColumn: weeks_to_today_iso

			annotation SummarizationSetBy = Automatic

		column current_week_iso
			dataType: string
			displayFolder: week
			summarizeBy: none
			sourceColumn: current_week_iso
			sortByColumn: week_year_number_iso

			annotation SummarizationSetBy = Automatic

		column week_period_name
			dataType: string
			displayFolder: week
			summarizeBy: none
			sourceColumn: week_period_name
			sortByColumn: week_year_number_iso

			annotation SummarizationSetBy = Automatic

		column week_of_month_number
			dataType: int64
			formatString: 0
			displayFolder: week
			summarizeBy: none
			sourceColumn: week_of_month_number

			annotation SummarizationSetBy = Automatic

		column half_number
			dataType: int64
			formatString: 0
			displayFolder: half
			summarizeBy: none
			sourceColumn: half_number

			annotation SummarizationSetBy = Automatic

		column half_year_name
			dataType: string
			displayFolder: half
			summarizeBy: none
			sourceColumn: half_year_name
			sortByColumn: half_year_number

			annotation SummarizationSetBy = Automatic

		column half_year_number
			dataType: int64
			formatString: 0
			displayFolder: half
			summarizeBy: none
			sourceColumn: half_year_number

			annotation SummarizationSetBy = Automatic

		column half_index
			dataType: int64
			formatString: 0
			displayFolder: half
			summarizeBy: none
			sourceColumn: half_index

			annotation SummarizationSetBy = Automatic

		column halves_to_today
			dataType: int64
			formatString: 0
			displayFolder: half
			summarizeBy: none
			sourceColumn: halves_to_today

			annotation SummarizationSetBy = Automatic

		column current_half
			dataType: string
			displayFolder: half
			summarizeBy: none
			sourceColumn: current_half
			sortByColumn: half_year_number

			annotation SummarizationSetBy = Automatic

		column bimester_number
			dataType: int64
			formatString: 0
			displayFolder: bimester
			summarizeBy: none
			sourceColumn: bimester_number

			annotation SummarizationSetBy = Automatic

		column bimester_year_name
			dataType: string
			displayFolder: bimester
			summarizeBy: none
			sourceColumn: bimester_year_name
			sortByColumn: bimester_year_number

			annotation SummarizationSetBy = Automatic

		column bimester_year_number
			dataType: int64
			formatString: 0
			displayFolder: bimester
			summarizeBy: none
			sourceColumn: bimester_year_number

			annotation SummarizationSetBy = Automatic

		column bimester_index
			dataType: int64
			formatString: 0
			displayFolder: bimester
			summarizeBy: none
			sourceColumn: bimester_index

			annotation SummarizationSetBy = Automatic

		column bimesters_to_today
			dataType: int64
			formatString: 0
			displayFolder: bimester
			summarizeBy: none
			sourceColumn: bimesters_to_today

			annotation SummarizationSetBy = Automatic

		column current_bimester
			dataType: string
			displayFolder: bimester
			summarizeBy: none
			sourceColumn: current_bimester
			sortByColumn: bimester_year_number

			annotation SummarizationSetBy = Automatic

		column fortnight_of_month_number
			dataType: int64
			formatString: 0
			displayFolder: fortnight
			summarizeBy: none
			sourceColumn: fortnight_of_month_number

			annotation SummarizationSetBy = Automatic

		column fortnight_month_number
			dataType: int64
			formatString: 0
			displayFolder: fortnight
			summarizeBy: none
			sourceColumn: fortnight_month_number

			annotation SummarizationSetBy = Automatic

		column fortnight_month_name
			dataType: string
			displayFolder: fortnight
			summarizeBy: none
			sourceColumn: fortnight_month_name
			sortByColumn: fortnight_month_number

			annotation SummarizationSetBy = Automatic

		column fortnight_month_year_number
			dataType: int64
			formatString: 0
			displayFolder: fortnight
			summarizeBy: none
			sourceColumn: fortnight_month_year_number

			annotation SummarizationSetBy = Automatic

		column fortnight_month_year_name
			dataType: string
			displayFolder: fortnight
			summarizeBy: none
			sourceColumn: fortnight_month_year_name
			sortByColumn: fortnight_month_year_number

			annotation SummarizationSetBy = Automatic

		column fortnight_index
			dataType: int64
			formatString: 0
			displayFolder: fortnight
			summarizeBy: none
			sourceColumn: fortnight_index

			annotation SummarizationSetBy = Automatic

		column fortnights_to_today
			dataType: int64
			formatString: 0
			displayFolder: fortnight
			summarizeBy: none
			sourceColumn: fortnights_to_today

			annotation SummarizationSetBy = Automatic

		column current_fortnight
			dataType: string
			displayFolder: fortnight
			summarizeBy: none
			sourceColumn: current_fortnight
			sortByColumn: fortnight_month_year_number

			annotation SummarizationSetBy = Automatic

		column closing_date_ref
			dataType: dateTime
			formatString: Short Date
			displayFolder: closing
			summarizeBy: none
			sourceColumn: closing_date_ref

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column closing_year
			dataType: int64
			formatString: 0
			displayFolder: closing
			summarizeBy: none
			sourceColumn: closing_year

			annotation SummarizationSetBy = Automatic

		column closing_month_name
			dataType: string
			displayFolder: closing
			summarizeBy: none
			sourceColumn: closing_month_name
			sortByColumn: closing_month_number

			annotation SummarizationSetBy = Automatic

		column closing_month_name_short
			dataType: string
			displayFolder: closing
			summarizeBy: none
			sourceColumn: closing_month_name_short
			sortByColumn: closing_month_number

			annotation SummarizationSetBy = Automatic

		column closing_month_number
			dataType: int64
			formatString: 0
			displayFolder: closing
			summarizeBy: none
			sourceColumn: closing_month_number

			annotation SummarizationSetBy = Automatic

		column closing_month_year_name
			dataType: string
			displayFolder: closing
			summarizeBy: none
			sourceColumn: closing_month_year_name
			sortByColumn: closing_month_year_number

			annotation SummarizationSetBy = Automatic

		column closing_month_year_number
			dataType: int64
			formatString: 0
			displayFolder: closing
			summarizeBy: none
			sourceColumn: closing_month_year_number

			annotation SummarizationSetBy = Automatic

		column season_north_number
			dataType: int64
			formatString: 0
			displayFolder: season
			summarizeBy: none
			sourceColumn: season_north_number

			annotation SummarizationSetBy = Automatic

		column season_north_name
			dataType: string
			displayFolder: season
			summarizeBy: none
			sourceColumn: season_north_name
			sortByColumn: season_north_number

			annotation SummarizationSetBy = Automatic

		column season_south_number
			dataType: int64
			formatString: 0
			displayFolder: season
			summarizeBy: none
			sourceColumn: season_south_number

			annotation SummarizationSetBy = Automatic

		column season_south_name
			dataType: string
			displayFolder: season
			summarizeBy: none
			sourceColumn: season_south_name
			sortByColumn: season_south_number

			annotation SummarizationSetBy = Automatic

		column holiday
			dataType: string
			displayFolder: business_days_holidays
			summarizeBy: none
			sourceColumn: holiday

			annotation SummarizationSetBy = Automatic

		column business_day_number
			dataType: int64
			formatString: 0
			displayFolder: business_days_holidays
			summarizeBy: none
			sourceColumn: business_day_number

			annotation SummarizationSetBy = Automatic

		column business_day_name
			dataType: string
			displayFolder: business_days_holidays
			summarizeBy: none
			sourceColumn: business_day_name

			annotation SummarizationSetBy = Automatic

		column fiscal_year_start_number
			dataType: int64
			formatString: 0
			displayFolder: fiscal_year
			summarizeBy: none
			sourceColumn: fiscal_year_start_number

			annotation SummarizationSetBy = Automatic

		column fiscal_year_end_number
			dataType: int64
			formatString: 0
			displayFolder: fiscal_year
			summarizeBy: none
			sourceColumn: fiscal_year_end_number

			annotation SummarizationSetBy = Automatic

		column fiscal_year
			dataType: string
			displayFolder: fiscal_year
			summarizeBy: none
			sourceColumn: fiscal_year

			annotation SummarizationSetBy = Automatic

		column fiscal_year_start
			dataType: dateTime
			formatString: Short Date
			displayFolder: fiscal_year
			summarizeBy: none
			sourceColumn: fiscal_year_start

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column fiscal_year_end
			dataType: dateTime
			formatString: Short Date
			displayFolder: fiscal_year
			summarizeBy: none
			sourceColumn: fiscal_year_end

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column current_fiscal_year
			dataType: string
			displayFolder: fiscal_year
			summarizeBy: none
			sourceColumn: current_fiscal_year
			sortByColumn: fiscal_year

			annotation SummarizationSetBy = Automatic

		column fiscal_years_to_today
			dataType: int64
			formatString: 0
			displayFolder: fiscal_year
			summarizeBy: none
			sourceColumn: fiscal_years_to_today

			annotation SummarizationSetBy = Automatic

		column fiscal_month_number
			dataType: int64
			formatString: 0
			displayFolder: fiscal_month
			summarizeBy: none
			sourceColumn: fiscal_month_number

			annotation SummarizationSetBy = Automatic

		column fiscal_month_name
			dataType: string
			displayFolder: fiscal_month
			summarizeBy: none
			sourceColumn: fiscal_month_name
			sortByColumn: fiscal_month_number

			annotation SummarizationSetBy = Automatic

		column fiscal_month_name_short
			dataType: string
			displayFolder: fiscal_month
			summarizeBy: none
			sourceColumn: fiscal_month_name_short
			sortByColumn: fiscal_month_number

			annotation SummarizationSetBy = Automatic

		column current_fiscal_month
			dataType: string
			displayFolder: fiscal_month
			summarizeBy: none
			sourceColumn: current_fiscal_month
			sortByColumn: fiscal_month_number

			annotation SummarizationSetBy = Automatic

		column fiscal_year_month_name
			dataType: string
			displayFolder: fiscal_month
			summarizeBy: none
			sourceColumn: fiscal_year_month_name
			sortByColumn: fiscal_year_month_number

			annotation SummarizationSetBy = Automatic

		column fiscal_year_month_number
			dataType: int64
			formatString: 0
			displayFolder: fiscal_month
			summarizeBy: none
			sourceColumn: fiscal_year_month_number

			annotation SummarizationSetBy = Automatic

		column fiscal_year_month_current
			dataType: string
			displayFolder: fiscal_month
			summarizeBy: none
			sourceColumn: fiscal_year_month_current
			sortByColumn: fiscal_year_month_number

			annotation SummarizationSetBy = Automatic

		column fiscal_months_to_today
			dataType: int64
			formatString: 0
			displayFolder: fiscal_month
			summarizeBy: none
			sourceColumn: fiscal_months_to_today

			annotation SummarizationSetBy = Automatic

		column fiscal_quarter_number
			dataType: int64
			formatString: 0
			displayFolder: fiscal_quarter
			summarizeBy: none
			sourceColumn: fiscal_quarter_number

			annotation SummarizationSetBy = Automatic

		column fiscal_quarter_name
			dataType: string
			displayFolder: fiscal_quarter
			summarizeBy: none
			sourceColumn: fiscal_quarter_name
			sortByColumn: fiscal_quarter_number

			annotation SummarizationSetBy = Automatic

		column fiscal_month_of_quarter_number
			dataType: int64
			formatString: 0
			displayFolder: fiscal_quarter
			summarizeBy: none
			sourceColumn: fiscal_month_of_quarter_number

			annotation SummarizationSetBy = Automatic

		column fiscal_year_quarter_name
			dataType: string
			displayFolder: fiscal_quarter
			summarizeBy: none
			sourceColumn: fiscal_year_quarter_name
			sortByColumn: fiscal_year_quarter_number

			annotation SummarizationSetBy = Automatic

		column fiscal_year_quarter_number
			dataType: int64
			formatString: 0
			displayFolder: fiscal_quarter
			summarizeBy: none
			sourceColumn: fiscal_year_quarter_number

			annotation SummarizationSetBy = Automatic

		column fiscal_quarter_start
			dataType: dateTime
			formatString: Short Date
			displayFolder: fiscal_quarter
			summarizeBy: none
			sourceColumn: fiscal_quarter_start

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column fiscal_quarter_end
			dataType: dateTime
			formatString: Short Date
			displayFolder: fiscal_quarter
			summarizeBy: none
			sourceColumn: fiscal_quarter_end

			annotation SummarizationSetBy = Automatic

			annotation UnderlyingDateTimeDataType = Date

		column fiscal_quarters_to_today
			dataType: int64
			formatString: 0
			displayFolder: fiscal_quarter
			summarizeBy: none
			sourceColumn: fiscal_quarters_to_today

			annotation SummarizationSetBy = Automatic

		column current_fiscal_quarter
			dataType: string
			displayFolder: fiscal_quarter
			summarizeBy: none
			sourceColumn: current_fiscal_quarter
			sortByColumn: fiscal_year_quarter_number

			annotation SummarizationSetBy = Automatic

		column day_of_fiscal_quarter
			dataType: int64
			formatString: 0
			displayFolder: fiscal_quarter
			summarizeBy: none
			sourceColumn: day_of_fiscal_quarter

			annotation SummarizationSetBy = Automatic

		partition dim_date = m
			mode: import
			source = ```
					let
					
					    #"-----PARAMETERS-----" = "",
					
					    // Specify the start date 
					    startDate = #date(2025, 1, 1),
					
					    // Years ahead today
					    yearsAhead = 1,
					            
					    // Specify the start of the week. Default: Day.Monday 
					    startOfWeek = Day.Monday,
					    
					    // Specify the month of the fiscal year end. Default: 3 (March)
					    monthOfFiscalYearEnd = 3,
					    
					    /* Start day of the closing month. 
					       Default: 16 (it means the closing month goes from the 16th of the current month 
					       to the 15th of the next month) */
					    closingMonthStartDay = 16,
					    
					    // Available: "en-US", "pt-BR", "es-ES"
					    language = "en-US",
					
					    #"-----INTERNAL USE-----" = "",
					  
					    endDate = Date.AddYears(Date.EndOfYear(Date.From(DateTime.LocalNow())), yearsAhead),
					    currentDate = Date.From(DateTime.LocalNow()),
						currentYear = Date.Year(currentDate),
						currentMonth = Date.Month(currentDate),  
					    startYear = Date.Year(startDate),
						startMonth = Date.Month(startDate),
					    currentFiscalYear = Date.Year(Date.AddMonths(currentDate, 12-monthOfFiscalYearEnd)), 
					    
					
					    // The table with auxiliary texts cross the languages
					    auxiliaryTextTable = Table.UnpivotOtherColumns(
					        #table(
					            type table [Class=text, #"en-US"=text, #"pt-BR"=text, #"es-ES"=text],
					            {
					                  { "current"        , "Current"        , "Atual"       , "Actual"              }
					                , { "quarter"        , "Q"              , "T"           , "T"                   }
					                , { "week"           , "W"              , "S"           , "S"                   }
					                , { "half"           , "H"              , "S"           , "S"                   }
					                , { "bimester"       , "B"              , "B"           , "B"                   }
					                , { "fortnight"      , "FN"             , "Q"           , "Q"                   }
					                , { "summer"         , "Summer"         , "Verão"       , "Verano"              }
					                , { "spring"         , "Spring"         , "Primavera"   , "Primavera"           }
					                , { "autumn"         , "Autumn"         , "Outono"      , "Otoño"               }
					                , { "winter"         , "Winter"         , "Inverno"     , "Invierno"            }
					                , { "businessDay"    , "BusinessDay"    , "Dia Útil"    , "Dia Laborable"       }
					                , { "non-businessDay", "Non-BusinessDay", "Dia Não Útil", "Dia No Laborable"    }
					            }
					        ),
					        {"Class"}, "Language", "Value"
					    ),
					    
					    // Filtered table on selected language
					    auxiliaryTextTableOnLanguage = Table.Buffer(Table.SelectRows(auxiliaryTextTable, each [Language]=language)),
					    currentText = auxiliaryTextTableOnLanguage{[Class="current"]}[Value], 
					    quarterPrefix = auxiliaryTextTableOnLanguage{[Class="quarter"]}[Value], 
					    weekPrefix = auxiliaryTextTableOnLanguage{[Class="week"]}[Value],
					    halfPrefix = auxiliaryTextTableOnLanguage{[Class="half"]}[Value],
					    bimesterPrefix = auxiliaryTextTableOnLanguage{[Class="bimester"]}[Value],
					    fortnightPrefix = auxiliaryTextTableOnLanguage{[Class="fortnight"]}[Value],
					    summerText = auxiliaryTextTableOnLanguage{[Class="summer"]}[Value],
					    springText = auxiliaryTextTableOnLanguage{[Class="spring"]}[Value],
					    autumnText = auxiliaryTextTableOnLanguage{[Class="autumn"]}[Value],
					    winterText = auxiliaryTextTableOnLanguage{[Class="winter"]}[Value],
					    businessDayText = auxiliaryTextTableOnLanguage{[Class="businessDay"]}[Value],
					    nonBusinessDayText = auxiliaryTextTableOnLanguage{[Class="non-businessDay"]}[Value],
					    
					    // Invisible character (zero-width spacing)
					    zws = Character.FromNumber(8203),  
					
					    // List with all dates 
					    datesList = List.Dates(startDate, Duration.Days(endDate-startDate)+1, #duration(1, 0, 0, 0)),
					
					    // List with all years 
					    yearRange = List.Buffer({Date.Year(startDate)..Date.Year(endDate)}),
					            
					
					    #"-----GENERATE HOLIDAYS-----" = "", 
					
					    // Fixed holidays that occur every year 
					    fixedHolidaysList = #table(
					        type table [Day=Int64.Type, Month=Int64.Type, Holiday=text],
					        
					        if language="pt-BR" then
					            {
					                // Day, Month, Holiday
					                  { 01, 01, "Confraternização Universal"   }
					                , { 25, 01, "Aniversário da Cidade"        } 
					                , { 21, 04, "Tiradentes"                   } 
					                , { 01, 05, "Dia do Trabalhador"           } 
					                , { 09, 07, "Revolução Constitucionalista" } 
					                , { 07, 09, "Independência do Brasil"      } 
					                , { 12, 10, "N. Srª Aparecida"             } 
					                , { 02, 11, "Finados"                      } 
					                , { 15, 11, "Proclamação da República"     } 
					                , { 20, 11, "Consciência Negra"            } 
					                , { 24, 12, "Véspera de Natal"             } 
					                , { 25, 12, "Natal"                        } 
					                , { 31, 12, "Véspera de Ano Novo"          } 
					            }
					
					        else if language="en-US" then
					            {
					                // Day, Month, Holiday
					                  { 1,  1, "New Year's Day"}
					                , { 4,  7, "Independence Day"}
					                , {11, 11, "Veterans Day"}
					                , {25, 12, "Christmas Day"}
					            }
					
					        else if language="es-ES" then
					            {
					                // Day, Month, Holiday
					                  { 1, 1, "Año Nuevo"}
					                , { 1, 5, "Día del Trabajo" } 
					            }
					        else null
					    ),
					
					    // Function that generates the fixed holidays for all years 
					    fxGenerateFixedHolidays = (year)=>
					        Table.AddColumn(
					            fixedHolidaysList,
					            "Date",
					            each #date(year, [Month], [Day]),
					            type date
					        )[[Date], [Holiday]],
					            
					    // Generate the fixed holiday table 
					    fixedHolidays = Table.Combine(List.Transform(yearRange, fxGenerateFixedHolidays)),
					    
					    // Function that generates the moving holidays 
					    fxGenerateMovingHolidays = (year) =>
					    let
					        modExcel = (x, y) =>
					            let
					                m = Number.Mod(x, y)
					            in
					                if m < 0 then m + y else m,
					        easter = Date.From(
					            Number.Round(
					                Number.From(#date(year, 4, 1))
					                    / 7
					                    + modExcel(19 * modExcel(year, 19) - 7, 30) * 0.14,
					                0,
					                RoundingMode.Up
					            )
					                * 7
					                - 6
					        ),
					        movingHolidays = #table(
					            type table [Date = date, Holiday = text],
					            {
					                  { Date.AddDays(easter, -2  ), if language = "pt-BR" then "Sexta-Feira Santa" else if language = "en-US" then "Good Friday" else if language = "es-ES" then "Viernes Santo" else null } 
					                , { easter                    , if language = "pt-BR" then "Páscoa" else if language = "en-US" then "Easter" else if language = "es-ES" then "Pascua" else null }
					                , { Date.AddDays(easter, 60  ), "Corpus Christi"             }
					            //  , { Date.AddDays(easter, -48 ), "Segunda-feira de Carnaval"  }
					            //  , { Date.AddDays(easter, -47 ), "Terça-feira de Carnaval"    }
					            //  , { Date.AddDays(easter, -46 ), "Quarta-feira de Cinzas"     }
					            }
					        )
					    in
					        movingHolidays,
					            
					    // Generate the moving holiday table 
					    movingHolidays = Table.Combine(List.Transform(yearRange, fxGenerateMovingHolidays)),
					            
					    // Table containing all holidays 
					    holidays = Table.Group(Table.Combine({fixedHolidays, movingHolidays}), {"Date"}, {{"Holiday", each Text.Combine(_[Holiday], "/"), type text}}),
					    
					    #"-----GENERATE DATA-----" = "",
					
					    #"-----DATE-----" = "",
					    datesTable = Table.FromList(datesList, Splitter.SplitByNothing(), type table [ Date = date ]),
					    add_date_index = Table.AddIndexColumn(datesTable, "date_index", 1, 1, Int64.Type),
					    add_days_to_today = Table.AddColumn(add_date_index, "days_to_today", each Number.From([Date] - currentDate), Int64.Type),
					    add_current_date = Table.AddColumn(add_days_to_today, "current_date", each if [days_to_today] = 0 then currentText else Date.ToText([Date], "dd/MM/yyyy"), type text),
					
					    #"-----YEAR-----" = "",    
					    add_year = Table.AddColumn(add_current_date, "year", each Date.Year([Date]), Int64.Type),
					    add_year_start = Table.AddColumn(add_year, "year_start", each Date.StartOfYear([Date]), type date),
					    add_year_end = Table.AddColumn(add_year_start, "year_end", each Date.EndOfYear([Date]), type date),
					    add_year_index = Table.AddColumn(add_year_end, "year_index", each [year] - startYear + 1, Int64.Type),
					    add_year_descending_name = Table.AddColumn(add_year_index, "year_descending_name", each [year], Int64.Type),
					    add_year_descending_number = Table.AddColumn(add_year_descending_name, "year_descending_number", each [year] * -1, Int64.Type),
					    add_years_to_today = Table.AddColumn(add_year_descending_number, "years_to_today", each [year] - Date.Year(currentDate), Int64.Type),
					    add_current_year = Table.AddColumn(add_years_to_today, "current_year", each if [years_to_today] = 0 then currentText else Text.From([year]), type text),
					
					    #"-----DAY-----" = "",
					    add_day_of_month = Table.AddColumn(add_current_year, "day_of_month", each Date.Day([Date]), Int64.Type),
					    add_day_of_year = Table.AddColumn(add_day_of_month, "day_of_year", each Date.DayOfYear([Date]), Int64.Type),
					    add_day_of_week_number = Table.AddColumn(add_day_of_year, "day_of_week_number", each Date.DayOfWeek([Date], startOfWeek), Int64.Type),
					    add_day_of_week_name = Table.AddColumn(add_day_of_week_number, "day_of_week_name", each Text.Proper(Date.DayOfWeekName([Date], language)), type text),
					    add_day_of_week_name_short = Table.AddColumn(add_day_of_week_name, "day_of_week_name_short", each Text.Start([day_of_week_name], 3), type text),
					    add_day_of_week_name_initials = Table.AddColumn(add_day_of_week_name_short, "day_of_week_name_initials", each Text.Repeat(zws, 7-[day_of_week_number]) & Text.Start([day_of_week_name], 1), type text),
					
					    #"-----MONTH-----" = "",
					    add_month_number = Table.AddColumn(add_day_of_week_name_initials, "month_number", each Date.Month([Date]), Int64.Type),
					    add_month_name = Table.AddColumn(add_month_number, "month_name", each Text.Proper(Date.MonthName([Date], language)), type text), 
					    add_month_name_short = Table.AddColumn(add_month_name, "month_name_short", each Text.Start([month_name], 3), type text), 
					    add_month_name_initials = Table.AddColumn(add_month_name_short, "month_name_initials", each Text.Repeat(zws, 12-[month_number]) & Text.Start([month_name], 1), type text),
					    add_month_year_name = Table.AddColumn(add_month_name_initials, "month_year_name", each Text.Proper(Date.ToText([Date], [Format="MMM/yy", Culture=language])), type text),
					    add_month_year_number = Table.AddColumn(add_month_year_name, "month_year_number", each [year] * 100 + [month_number], Int64.Type),
					    add_month_day_number = Table.AddColumn(add_month_year_number, "month_day_number", each [month_number] * 100 + [day_of_month], Int64.Type),
					    add_month_day_name = Table.AddColumn(add_month_day_number, "month_day_name", each [month_name_short] & " " & Text.From([day_of_month]), type text), 
					    add_month_start = Table.AddColumn(add_month_day_name, "month_start", each Date.StartOfMonth([Date]), type date),
					    add_month_end = Table.AddColumn(add_month_start, "month_end", each Date.EndOfMonth([Date]), type date),
					    add_month_index = Table.AddColumn(add_month_end, "month_index", each 12 * ([year]-Date.Year(startDate)) + [month_number], Int64.Type),
					    add_months_to_today = Table.AddColumn(add_month_index, "months_to_today", each ([year] * 12 - 1 + [month_number]) - (currentYear * 12 - 1 + Date.Month(currentDate)), Int64.Type),
					    add_current_month_name = Table.AddColumn(add_months_to_today, "current_month_name", each if currentMonth = [month_number] then currentText else [month_name], type text),
					    add_current_month_name_short = Table.AddColumn(add_current_month_name, "current_month_name_short", each if currentMonth = [month_number] then currentText else [month_name_short], type text),
					    add_current_month_year_name = Table.AddColumn(add_current_month_name_short, "current_month_year_name", each if [months_to_today] = 0 then currentText else [month_year_name], type text),
					
					    #"-----QUARTER-----" = "",
					    add_quarter_number = Table.AddColumn(add_current_month_year_name, "quarter_number", each Date.QuarterOfYear([Date]), Int64.Type), 
					    add_quarter_name = Table.AddColumn(add_quarter_number, "quarter_name", each quarterPrefix & Text.From([QuarterNumber]), type text),
					    add_quarter_year_name = Table.AddColumn(add_quarter_name, "quarter_year_name", each [quarter_name] & " " & Text.End(Text.From([year]), 2), type text),
					    add_quarter_year_number = Table.AddColumn(add_quarter_year_name, "quarter_year_number", each [year] * 100 + [quarter_number], Int64.Type), 
					    add_quarter_start = Table.AddColumn(add_quarter_year_number, "quarter_start", each Date.StartOfQuarter([Date]), type date),
					    add_quarter_end = Table.AddColumn(add_quarter_start, "quarter_end", each Date.EndOfQuarter([Date]), type date),
					    add_quarter_index = Table.AddColumn(add_quarter_end, "quarter_index", each 4 * ([year] - Date.Year(startDate)) + [quarter_number], Int64.Type),
					    add_quarters_to_today = Table.AddColumn(add_quarter_index, "quarters_to_today", each ([year] * 4 - 1 + [quarter_number]) - (currentYear * 4 - 1 + Date.QuarterOfYear(currentDate)), Int64.Type),
					    add_current_quarter = Table.AddColumn(add_quarters_to_today, "current_quarter", each if Date.QuarterOfYear(currentDate) = [quarter_number] then currentText else [quarter_name], type text),
					    add_current_quarter_year = Table.AddColumn(add_current_quarter, "current_quarter_year", each if [quarters_to_today] = 0 then currentText else [quarter_year_name], type text),
					    add_month_of_quarter_number = Table.AddColumn(add_current_quarter_year, "month_of_quarter_number", each Number.Mod([month_number] - 1, 3) + 1, Int64.Type),
					
					    #"-----WEEK-----" = "",
					    add_week_of_year_number_iso = Table.AddColumn(
					        add_month_of_quarter_number, 
					        "week_of_year_number_iso", 
					        each let
					            thursdayInWeek = Date.AddDays(
					                [Date],
					                3 - Date.DayOfWeek([Date], Day.Monday)
					            ),
					            startYearThursdayInWeek = #date(Date.Year(thursdayInWeek), 1, 1),
					            diffDays = Duration.Days(thursdayInWeek - startYearThursdayInWeek)
					        in
					            Number.IntegerDivide(diffDays, 7, 0) + 1,
					        Int64.Type
					    ),
					
					    add_year_iso = Table.AddColumn(add_week_of_year_number_iso, "year_iso", each Date.Year(Date.AddDays([Date], 26 - [week_of_year_number_iso])), Int64.Type),
					    add_week_year_number_iso = Table.AddColumn(add_year_iso, "week_year_number_iso", each [year_iso] * 100 + [week_of_year_number_iso], Int64.Type),
					    add_week_year_name_iso = Table.AddColumn(add_week_year_number_iso, "week_year_name_iso", each weekPrefix & Text.PadStart(Text.From([week_of_year_number_iso]), 2, "0") & " " & Text.From([year_iso]), type text),
					    add_week_start_iso = Table.AddColumn(add_week_year_name_iso, "week_start_iso", each Date.StartOfWeek([Date], Day.Monday), type date), 
					    add_week_end_iso = Table.AddColumn(add_week_start_iso, "week_end_iso", each Date.EndOfWeek([Date], Day.Monday), type date), 
					    add_week_index_iso = Table.AddColumn(add_week_end_iso, "week_index_iso", each Number.From([week_start_iso] - Date.StartOfWeek(startDate, Day.Monday)) / 7 + 1, Int64.Type),
					    add_weeks_to_today_iso = Table.AddColumn(add_week_index_iso, "weeks_to_today_iso", each Number.From([week_start_iso] - Date.StartOfWeek(currentDate, Day.Monday)) / 7, Int64.Type),
					    add_current_week_iso = Table.AddColumn(add_weeks_to_today_iso, "current_week_iso", each if [weeks_to_today_iso] = 0 then currentText else [week_year_name_iso], type text),
					    add_week_period_name = Table.AddColumn(add_current_week_iso, "week_period_name", each [week_year_name_iso] & ": " & Date.ToText([week_start_iso], [Format="dd/MM/yyyy"]) & "~" & Date.ToText([week_end_iso], [Format="dd/MM/yyyy"]), type text),
					    add_week_of_month_number = Table.AddColumn(add_week_period_name, "week_of_month_number", each Date.WeekOfMonth([Date], startOfWeek), Int64.Type),
					    
					    #"-----HALF-----" = "",
					    add_half_number = Table.AddColumn(add_week_of_month_number, "half_number", each if [month_number] <= 6 then 1 else 2, Int64.Type),
					    add_half_year_name = Table.AddColumn(add_half_number, "half_year_name", each halfPrefix & Text.From([HalfNumber]) & " " & Text.From([year]), type text),
					    add_half_year_number = Table.AddColumn(add_half_year_name, "half_year_number", each [year] * 100 + [half_number], Int64.Type),
					    add_half_index = Table.AddColumn(add_half_year_number, "half_index", each (2*([year] - Date.Year(startDate))) + [half_number], Int64.Type),
					    add_halfs_to_today = Table.AddColumn(add_half_index, "halfs_to_today", each [half_index] - ( 2 * ( currentYear - startYear ) + ( if currentMonth <= 6 then 1 else 2 )), Int64.Type),
					    add_current_half = Table.AddColumn(add_halfs_to_today, "current_half", each if [halfs_to_today] = 0 then currentText else [half_year_name], type text), 
					
					    #"-----BIMESTER-----" = "",
					    add_bimester_number = Table.AddColumn(add_current_half, "bimester_number", each Number.RoundUp([month_number]/ 2), Int64.Type),
					    add_bimester_year_name = Table.AddColumn(add_bimester_number, "bimester_year_name", each bimesterPrefix & Text.From([BimesterNumber]) & " " & Text.From([year]), type text),
					    add_bimester_year_number = Table.AddColumn(add_bimester_year_name, "bimester_year_number", each [year] * 100 + [bimester_number], Int64.Type),
					    add_bimester_index = Table.AddColumn(add_bimester_year_number, "bimester_index", each (6*([year] - Date.Year(startDate))) + [bimester_number], Int64.Type),
					    add_bimesters_to_today = Table.AddColumn(add_bimester_index, "bimesters_to_today", each ( 6 * ( [year] - startYear ) + [bimester_number])  - (( 6 * ( currentYear - startYear ) ) + Number.RoundUp ( currentMonth / 2, 0 )), Int64.Type),
					    add_current_bimester = Table.AddColumn(add_bimesters_to_today, "current_bimester", each if [bimesters_to_today] = 0 then currentText else [bimester_year_name], type text),
					
					    #"-----FORTNIGHT-----" = "",
					    add_fortnight_of_month_number = Table.AddColumn(add_current_bimester, "fortnight_of_month_number", each if [day_of_month] <= 15 then 1 else 2, Int64.Type),
					    add_fortnight_month_number = Table.AddColumn(add_fortnight_of_month_number, "fortnight_month_number", each [month_number] * 10 + [fortnight_of_month_number], Int64.Type),
					    add_fortnight_month_name = Table.AddColumn(add_fortnight_month_number, "fortnight_month_name", each [month_name_short] & " " & Text.From([fortnight_of_month_number]), type text),
					    add_fortnight_month_year_number = Table.AddColumn(add_fortnight_month_name, "fortnight_month_year_number", each [year] * 10000 + [month_number] * 100 + [fortnight_month_number], Int64.Type),
					    add_fortnight_month_year_name = Table.AddColumn(add_fortnight_month_year_number, "fortnight_month_year_name", each fortnightPrefix & Text.From([fortnight_of_month_number]) & " " & [month_name_short] & " " & Text.From([year]), type text),
					    add_fortnight_index = Table.AddColumn(add_fortnight_month_year_name, "fortnight_index", each 24 * ([year] - Date.Year(startDate)) + 2 * ([month_number]-Date.Month(startDate)) + [fortnight_of_month_number] , Int64.Type),
					    add_fortnights_to_today = Table.AddColumn(add_fortnight_index, "fortnights_to_today", each [fortnight_index] - ( (24 * (currentYear - Date.Year(startDate))) + (2 * (Date.Month(currentDate)-Date.Month(startDate))) + (if Date.Day(currentDate) <= 15 then 1 else 2)), Int64.Type),
					    add_current_fortnight = Table.AddColumn(add_fortnights_to_today, "current_fortnight", each if [fortnights_to_today] = 0 then currentText else [fortnight_month_name], type text),
					    
					    #"-----CLOSING-----" = "",
					    add_closing_date_ref = Table.AddColumn(add_current_fortnight, "closing_date_ref", each if [day_of_month] <= closingMonthStartDay then [Date] else Date.AddMonths([Date], 1), type date),
					    add_closing_year = Table.AddColumn(add_closing_date_ref, "closing_year", each Date.Year([closing_date_ref]), Int64.Type),
					    add_closing_month_name = Table.AddColumn(add_closing_year, "closing_month_name", each Text.Proper(Date.MonthName([closing_date_ref], language)), type text),
					    add_closing_month_name_short = Table.AddColumn(add_closing_month_name, "closing_month_name_short", each Text.Start([closing_month_name], 3), type text), 
					    add_closing_month_number = Table.AddColumn(add_closing_month_name_short, "closing_month_number", each Date.Month([closing_date_ref]), Int64.Type),
					    add_closing_month_year_name = Table.AddColumn(add_closing_month_number, "closing_month_year_name", each [closing_month_name_short] & "/" & Text.End(Text.From([closing_year]), 2), type text), 
					    add_closing_month_year_number = Table.AddColumn(add_closing_month_year_name, "closing_month_year_number", each [closing_year] * 100 + [closing_month_number], Int64.Type),
					
					    #"-----SEASONS-----" = "",
					    add_season_north_number = Table.AddColumn(
					        add_closing_month_year_number, 
					        "season_north_number", 
					        each if [month_day_number] >= 321 and [month_day_number] <= 620  then 1 else 
					             if [month_day_number] >= 621 and [month_day_number] <= 921  then 2 else 
					             if [month_day_number] >= 922 and [month_day_number] <= 1221 then 3 else 4,
					        Int64.Type
					    ),
					
					    add_season_north_name = Table.AddColumn(
					        add_season_north_number, 
					        "season_north_name", 
					        each if [season_north_number] = 1 then springText else 
					             if [season_north_number] = 2 then summerText else 
					             if [season_north_number] = 3 then autumnText else winterText, 
					        type text
					    ),
					
					    add_season_south_number = Table.AddColumn(
					        add_season_north_name, 
					        "season_south_number", 
					        each if [month_day_number] >= 321 and [month_day_number] <= 620  then 1 else 
					             if [month_day_number] >= 621 and [month_day_number] <= 921  then 2 else 
					             if [month_day_number] >= 922 and [month_day_number] <= 1221 then 3 else 4,
					        Int64.Type
					    ),
					
					    add_season_south_name = Table.AddColumn(
					        add_season_south_number, 
					        "season_south_name", 
					        each if [season_north_number] = 1 then autumnText else 
					             if [season_north_number] = 2 then winterText else 
					             if [season_north_number] = 3 then springText else summerText, 
					        type text
					    ),
					
					    #"-----BUSINESS-----" = "",
					    add_holiday = Table.RenameColumns(Table.RemoveColumns(Table.Join(add_season_south_name, "Date", Table.PrefixColumns(holidays, "h"), "h.Date", JoinKind.LeftOuter, JoinAlgorithm.LeftIndex), "h.Date"), {{"h.Holiday", "Holiday"}}),
					    add_business_day_number = Table.AddColumn(add_holiday, "business_day_number", each if [Holiday] <> null or Date.DayOfWeek([Date], Day.Monday) > 4 then 0 else 1, Int64.Type),
					    add_business_day_name = Table.AddColumn(add_business_day_number, "business_day_name", each if [business_day_number] = 1 then businessDayText else nonBusinessDayText, type text),
					
					
					    #"-----FISCAL COLUMNS-----" = "", 
					    #"-----FISCAL YEAR-----" = "", 
					    add_fiscal_year_start_number = Table.AddColumn(add_business_day_name, "fiscal_year_start_number", each Date.Year(Date.AddMonths([Date], 12 - monthOfFiscalYearEnd)), Int64.Type),
					    add_fiscal_year_end_number = Table.AddColumn(add_fiscal_year_start_number, "fiscal_year_end_number", each [fiscal_year_start_number] + 1, Int64.Type),
					    add_fiscal_year = Table.AddColumn(add_fiscal_year_end_number, "fiscal_year", each "FY " & Text.From([fiscal_year_start_number]) & "-" &Text.From([fiscal_year_end_number]), type text),
					    add_fiscal_year_start = Table.AddColumn( add_fiscal_year, "fiscal_year_start", each #date( [fiscal_year_start_number], if monthOfFiscalYearEnd = 12 then 1 else  monthOfFiscalYearEnd + 1 , 1), type date ),
					    add_fiscal_year_end = Table.AddColumn( add_fiscal_year_start, "fiscal_year_end", each Date.EndOfMonth(#date([fiscal_year_end_number], monthOfFiscalYearEnd, 1)), type date),
					    add_current_fiscal_year = Table.AddColumn(add_fiscal_year_end, "current_fiscal_year", each if [fiscal_year_start_number] = currentFiscalYear then currentText else [fiscal_year], type text),
					    add_fiscal_years_to_today = Table.AddColumn(add_current_fiscal_year, "fiscal_years_to_today", each [fiscal_year_start_number] - currentFiscalYear, Int64.Type),
					    
					    #"-----FISCAL MONTH-----" = "", 
					    add_fiscal_month_number = Table.AddColumn(add_fiscal_years_to_today, "fiscal_month_number", each Date.Month( Date.AddMonths([Date], - monthOfFiscalYearEnd ) ), Int64.Type),
					    add_fiscal_month_name = Table.AddColumn( add_fiscal_month_number, "fiscal_month_name", each Text.Proper(Date.ToText([Date], [Format="MMMM", Culture = language])), type text ),
					    add_fiscal_month_name_short = Table.AddColumn(add_fiscal_month_name, "fiscal_month_name_short", each Text.Start([fiscal_month_name], 3), type text),
					    add_current_fiscal_month = Table.AddColumn( add_fiscal_month_name_short, "current_fiscal_month", each if Date.IsInCurrentMonth([Date]) then currentText else [fiscal_month_name], Text.Type),
					    add_fiscal_year_month_name = Table.AddColumn(add_current_fiscal_month, "fiscal_year_month_name", each [fiscal_month_name_short] & " " & [fiscal_year], type text),
					    add_fiscal_year_month_number = Table.AddColumn( add_fiscal_year_month_name, "fiscal_year_month_number", each [fiscal_year_start_number] * 100 + [fiscal_month_number], Int64.Type ),
					    add_fiscal_year_month_current = Table.AddColumn( add_fiscal_year_month_number, "fiscal_year_month_current", each if [current_fiscal_year] = currentText and [current_fiscal_month] = currentText then currentText else [fiscal_year_month_name], type text),
					    add_fiscal_months_to_today = Table.AddColumn(add_fiscal_year_month_current, "fiscal_months_to_today", each [ CurrentFiscalMonth = Date.Month( Date.AddMonths( currentDate, - monthOfFiscalYearEnd ) ), FiscalQuartersToToday = (([fiscal_year_start_number] - currentFiscalYear) * 12) + ([fiscal_month_number] - CurrentFiscalMonth)][FiscalQuartersToToday], Int64.Type ),
					    
					    #"-----FISCAL QUARTER-----" = "", 
					    add_fiscal_quarter_number = Table.AddColumn(add_fiscal_months_to_today, "fiscal_quarter_number", each Number.RoundUp( [fiscal_month_number] / 3), Int64.Type),
					    add_fiscal_quarter_name = Table.AddColumn(add_fiscal_quarter_number, "fiscal_quarter_name", each "FQ " & Text.From([fiscal_quarter_number]), Text.Type),
					    add_fiscal_month_of_quarter_number = Table.AddColumn(add_fiscal_quarter_name, "fiscal_month_of_quarter_number", each [fiscal_month_number] - 3 * ([fiscal_quarter_number] - 1) , Int64.Type ),
					    add_fiscal_year_quarter_name = Table.AddColumn(add_fiscal_month_of_quarter_number, "fiscal_year_quarter_name", each [fiscal_quarter_name] & " | " & [fiscal_year], type text),
					    add_fiscal_year_quarter_number = Table.AddColumn(add_fiscal_year_quarter_name, "fiscal_year_quarter_number", each [fiscal_year_start_number] * 100 + [fiscal_quarter_number], Int64.Type),
					    add_fiscal_quarter_start = Table.AddColumn(add_fiscal_year_quarter_number, "fiscal_quarter_start", each Date.StartOfMonth( Date.AddMonths( [Date] , 1-[fiscal_month_of_quarter_number] )), Date.Type),
					    add_fiscal_quarter_end = Table.AddColumn(add_fiscal_quarter_start, "fiscal_quarter_end", each Date.EndOfMonth( Date.AddMonths( [Date] , 3-[fiscal_month_of_quarter_number] )), Date.Type),
					    add_fiscal_quarters_to_today = Table.AddColumn(
					        add_fiscal_quarter_end, 
					        "fiscal_quarters_to_today", 
					        each [
					            CurrentFiscalMonth = Date.Month(Date.AddMonths(currentDate, - monthOfFiscalYearEnd)),  
					            CurrentFiscalQuarter = Number.RoundUp(CurrentFiscalMonth / 3),
					            FiscalQuartersToToday = (([fiscal_year_start_number] - currentFiscalYear) * 4) + ([fiscal_quarter_number] - CurrentFiscalQuarter)
					        ][FiscalQuartersToToday], 
					        Int64.Type 
					    ),
					    add_current_fiscal_quarter = Table.AddColumn(add_fiscal_quarters_to_today, "current_fiscal_quarter", each if [fiscal_quarters_to_today] = 0 then currentText else [fiscal_year_quarter_name], type text),
					    add_day_of_fiscal_quarter = Table.AddColumn(add_current_fiscal_quarter, "day_of_fiscal_quarter", each Number.From( [Date] - [FiscalQuarterStart] ) + 1, Int64.Type ),
					
					    #"-----RENAME COLUMNS----" = "",
					    columnNamesDictionary = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("jVjbbtw4DP2XPPcnMpkGCdAm7U6KYlHkQXGUxrseC7A9xWa/fnUjeURx0n2ZkY54aIo6omz9+HGxd5u/+JD+XPy79sOru3j8UPDb+dn/Uwdjexw8mdReMXxbH8JDeHZvyXR06xe3uJvwl6/dG7dusf+Wra9Oy+LnDZ56uZ3cRH4vh9xLln96t0T4cg71l8DD5patYLfzOIyhaZPVx/m54NfjkRozj9LMMq9OTNpktffr4CM0/7xzx2qy98OS4c3fBQGzYQWfFtPF6fjkl97J6eiXAPAwAkxuIMPRDjOculaGJX2U4NSU9MZlu3/5HObttSzTPnz2a236KbXZqrrKRmU5ihEtSjb67v3fPMU07g7+6GbH88ucTy3askuOkRsYEabkt2EeXkNWhaJfRuNfo3vuI8h+riLJCCNqaRvdtPb+ssrcuNruyuhUk5ezyzmJKeVcSFvsyuzTSIAWzZVtaJ7VEOfHDJkV02BGlQkzYaIRf1p8iS0uuYRXOk2E2RpmnExg0tJlRsw7EmJSkSDdhsDxpPHQdpp4qFbEUa4V0mazUiziQCkWuTHLMFWLzKzVQtpsBps0jnrcpblvbVO19nmvQoaH2qdJaRaogalKEuhDhIGOuiXWUVDhgEC+nmJivaz1wzIe/botUs80gqzyMLEIRh/sIUC2ESUqSEXYKLIx7QJt1Vn5pCC2Yh1pBEhFT2xQVAXdGY1JXeCvaqwiHoRWOSA1pqHeBLREV500c6+HhAByVLSsehpg1npyc9Rkkd2/aMmkHRt63STYT5Z6UnUup1HxcXu4j/al/uaTqdg2cD6lBOfzP9ukEx8b9BD7EeYDOu/MT0VXGQYLSmUXuFlvaFXUZSNEinpDg6i3tjujcdZb6y/JC5GRESKR4NCKBdeAJDhiV/XkJ+PkkzwaYCCEnvnFL2N4rhu/GBWIdr7GaOsXobTHL8kEj2HWSHse37jpBXmtPhVABKhRZCElqkUoTKbpZ2F16jGiUt0gCy4bCiB7qBlkgSWDMatiJD4GUzc892Wz70rJkknt9Abf9TubSJDEXVfnd2aZb6j6mZjIHkM6JXOna7ACkAMJ3Rk1ePdeCSYfGFhN6q6vwNfx3J7Hn6+bVvXX0zj/67WuEzp4Q9nsx/Zi+XjXQVkqpAdGBkZoqVpys2DgAtcM/LTLZrjqYhHlKDdGRLT8ROflJyosP5Ng/YmH609Uc/3ZCZBJAETEI3gKa/yGTJ/Nf/i0E9OX897nb+ZjdBcKmvt7fzX6+JAEAVc+CIVV+sUcbdVbqRDkpbCQ8NVUUeHVtOWr91N0BO+n6A3eGMAVvDBUH6IPpHevt9Z0OA1nZmR82NihiCOJ5uDdGua7ODmZy8eoicGFBEppNEDNLxNpDIMF0SQK9xBO/bMPp0k/WSDNbZ6bzEIP8MEWprHsi+t4NvPH93Usa+OvWndPMbV+XfHzL5p820aJKfY/uaewuKepOSyAylcGmcjXBUKDvT6ug5v4AgmvY8pQ/fjFCxlroPUV37x6T/GFy/KDcOsFrUr7pbSNwLvI+liNINs4jiqspjKZUcElUgXgdGKGuqbKA6O+rSrm6lgsYL/dM4z7q0E0UypWsQpdv1WDWayYqgoV+ug+pMEfWlPaBLDSpi8BKMdNeTozBeGr6tRlToOGjzoZZQ+TOL/85g1ILwCBbQWcvVdQ87Hx3o+6NWjy2qOGOn733drnGb9e30l4G2FMrB2kOdBLQAdp0KAe/c/sdXcfquoQnmqIWXzOXYdIFerAuaeblx29tNSY1lezUY0bkFbrGlYX59pLvhtXnAu6J9f44+N/", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#"en-US" = _t, #"pt-BR" = _t, #"es-ES" = _t]),
					    
					    fromToColumnNames = if language <> "en-US" then List.Zip(Table.ToColumns(Table.SelectColumns(columnNamesDictionary, {"en-US", language}))) else null,
					    renamedColumns = if language <> "en-US" then Table.RenameColumns(add_day_of_fiscal_quarter, fromToColumnNames) else add_day_of_fiscal_quarter
					in
					    renamedColumns
					```

		annotation PBI_NavigationStepName = Navigation

		annotation PBI_ResultType = Table
